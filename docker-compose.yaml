version: "3.4"

services:
  writer:
    image: malekvictor/space-box-writer:0.0.2
    environment:
      ENV_FILE: "/opt/.env"
    restart: unless-stopped
    container_name: spacebox-writer
    volumes:
      - .env-docker:/opt/.env
      - ./volumes/writer/migrations:/space-box-writer/migrations
    depends_on:
      - zookeeper
      - kafka
      - clickhouse
  # TODO:
  #  api:
  #    image: malekvictor/space-box-api:0.0.1
  #    volumes:
  #      - .env:/opt/.env-dev
  #    depends_on:
  #      - clickhouse
  #    restart: unless-stopped
  #    ports:
  #      - "8080:8080"
  zookeeper:
    image: bitnami/zookeeper:3.8.0
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    restart: unless-stopped
    container_name: spacebox-zookeeper
  kafka:
    image: bitnami/kafka:3.3.1
    ports:
      - '9092:9092'
      - '9093:9093'
    container_name: spacebox-kafka
    hostname: kafka
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9093,EXTERNAL://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9093,EXTERNAL://localhost:9092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    restart: unless-stopped
    depends_on:
      - zookeeper
  clickhouse:
    image: clickhouse/clickhouse-server:22.9.7.34
    restart: unless-stopped
    hostname: clickhouse
    container_name: spacebox-clickhouse
    ports:
      - '8123:8123'
      - '9000:9000'
      - '9009:9009'
    volumes:
      - ./volumes/clickhouse/data:/var/lib/clickhouse
      - ./volumes/clickhouse/logs:/var/log/clickhouse-server
      - ./config/clickhouse:/etc/clickhouse-server/users.d
  crawler:
    image: malekvictor/space-box-crawler:0.0.3
    environment:
      ENV_FILE: "/opt/.env"
    restart: unless-stopped
    container_name: spacebox-crawler
    volumes:
      - .env-docker:/opt/.env
    depends_on:
      - zookeeper
      - kafka
      - mongo
  mongo:
    image: mongo:6.0.3
    restart: always
    hostname: mongo
    container_name: spacebox-mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: space_box_user
      MONGO_INITDB_ROOT_PASSWORD: space_box_password
      MONGO_INITDB_DATABASE: spacebox
    ports:
      - "27018:27017"
    volumes:
      - ./volumes/mongo:/data/db