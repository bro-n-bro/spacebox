version: "3.9"

services:
  #  writer:
  #    image: hexydev/space-box-writer:0.0.1
  #    environment:
  #      ENV_FILE: "/opt/.env"
  #    restart: unless-stopped
  #    container_name: spacebox-writer
  #    volumes:
  #      - .env-docker:/opt/.env
  #      - ./volumes/writer/migrations:/space-box-writer/migrations
  #    command: [ "./main" ]
  #    depends_on:
  #      zookeeper:
  #        condition: service_started
  #      kafka:
  #        condition: service_healthy
  #      clickhouse:
  #        condition: service_healthy
  # TODO:
  #  api:
  #    image: hexydev/space-box-api:0.0.1
  #    volumes:
  #      - .env:/opt/.env-dev
  #    depends_on:
  #      - clickhouse
  #    restart: unless-stopped
  #    ports:
  #      - "8080:8080"
  zookeeper:
    image: bitnami/zookeeper:3.8.0
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    restart: unless-stopped
    container_name: spacebox-zookeeper
    volumes:
      - ./volumes/zookeeper:/bitnami/zookeeper
  kafka-ui:
    container_name: spacebox-kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - '8080:8080'
    restart: unless-stopped
    depends_on:
      kafka:
        condition: service_started
      zookeeper:
        condition: service_started
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9093
  kafka:
    image: bitnami/kafka:3.3.1
    ports:
      - '9092:9092'
      - '9093:9093'
    container_name: spacebox-kafka
    hostname: kafka
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9093,EXTERNAL://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9093,EXTERNAL://localhost:9092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_DELETE_TOPIC_ENABLE=true
    volumes:
      - ./volumes/kafka:/bitnami/kafka
    restart: unless-stopped
    depends_on:
      zookeeper:
        condition: service_started
    healthcheck:
      test: kafka-topics.sh --list --bootstrap-server localhost:9092
      interval: 120s
      timeout: 60s
      retries: 5
  #  kafka-init-topics:
  #    image: bitnami/kafka:3.3.1
  #    container_name: kafka-init-topics
  #    volumes:
  #      - ./scripts/create_topics.sh:/opt/kafka/init_topics.sh
  #    depends_on:
  #      kafka:
  #        condition: service_healthy
  #    command: "bash -c 'echo Create topics... && \
  #                 ./opt/kafka/init_topics.sh && \
  #                 echo done!'"
  clickhouse:
    image: clickhouse/clickhouse-server:22.9.7
    restart: unless-stopped
    hostname: clickhouse
    container_name: spacebox-clickhouse
    ports:
      - '8123:8123'
      - '9000:9000'
      - '9009:9009'
    environment:
      CLICKHOUSE_INIT_TIMEOUT: 60
      CLICKHOUSE_DB: spacebox
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8123/ping
      interval: 60s
      timeout: 10s
      retries: 5
    volumes:
      - ./volumes/clickhouse/data:/var/lib/clickhouse
      - ./volumes/clickhouse/logs:/var/log/clickhouse-server
      - ./config/clickhouse:/etc/clickhouse-server/users.d
  #  crawler:
  #    image: hexydev/space-box-crawler:0.0.1
  #    environment:
  #      ENV_FILE: "/opt/.env"
  #    restart: unless-stopped
  #    container_name: spacebox-crawler
  #    volumes:
  #      - .env-docker:/opt/.env
  #    depends_on:
  #      kafka:
  #        condition: service_healthy
  #      zookeeper:
  #        condition: service_started
  #      mongo:
  #        condition: service_started
  mongo-crawler:
    image: mongo:6.0.3
    restart: always
    hostname: mongo-1
    container_name: spacebox-crawler-mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: spacebox_user
      MONGO_INITDB_ROOT_PASSWORD: spacebox_password
      MONGO_INITDB_DATABASE: spacebox
    ports:
      - '27018:27017'
    volumes:
      - ./volumes/mongo/crawler:/data/db

  mongo-writer:
    image: mongo:6.0.3
    restart: always
    hostname: mongo-2
    container_name: spacebox-writer-mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: spacebox_user
      MONGO_INITDB_ROOT_PASSWORD: spacebox_password
      MONGO_INITDB_DATABASE: spacebox
    ports:
      - '27018:27017'
    volumes:
      - ./volumes/mongo/writer:/data/db